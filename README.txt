The source code for the RCSB utility for converting CIF to XML is here: https://github.com/rcsb/cpp-misc-xml-util/
For the entire suite of utilities, download and extract the tarball here: https://sw-tools.rcsb.org/apps/MMCIF-DICT-SUITE/ 
The following instuctions assume we have built the utilities in a directory called "build".

In order to use the CIF to XML converter script, we must first generate an SDB file ("serialized database," binary version of the ASCII .dic file) with the script at build/bin/CreateDictSdbFile.csh. This script calls build/bin/DictToSdb (compiled from modules/cpp-misc-dict-util/DictToSdb.C) with the paths of the DDL and dictionary files stored in build/dicts and puts the generated SDB file in build/sdb. Then, we must generate an ODB ("object") file with the script at build/bin/CreateDictObjFile.csh. This script requires the name of the dictionary without the .dic suffix as an argument and calls build/bin/DictObjFileCreator (compiled from modules/cpp-dict-obj-file/src/DictObjFileCreator.C) to create the ODB file in build/odb. I have automated the download, build, and SDB/ODB generation with the script at /h/anagle/cif2xml/setup.sh. Some documentation about dictionary object files is available at https://sw-tools.rcsb.org/apps/CIFOBJ/, which might help with future debugging.

Once we have the ODB file, we can run the binary at build/bin/mmcif2xml (compiled from modules/cpp-misc-xml-util/src/mmcif2XML.C). This script takes the ODB file we generated as the -df argument. The -dictName argument should contain a ".dic" suffix but should NOT contain "-v50." See the log at build/odb for the exact name to use (stated after "Building dictionary object"). I have a working sccript at /h/anagle/cif2xml/testconvert.sh that converts the provided test cif file into an XML file.

